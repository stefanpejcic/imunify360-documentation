import{_ as l}from"./Max_filesize-e3c6efcb.js";import{_ as d,V as s,n as c,p as u,q as e,C as t,A as n,J as a,a7 as r}from"./framework-9921d369.js";const h="/images/niceio-priority.png",p="/images/auto-update.png",g={},m=e("h1",{id:"agent-patchman-client",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#agent-patchman-client","aria-hidden":"true"},"#"),a(" Agent (patchman-client)")],-1),f={class:"table-of-contents"},v=r(`<h2 id="where-can-i-find-the-software-changelog" tabindex="-1"><a class="header-anchor" href="#where-can-i-find-the-software-changelog" aria-hidden="true">#</a> Where can I find the software changelog?</h2><h3 id="online-changelog" tabindex="-1"><a class="header-anchor" href="#online-changelog" aria-hidden="true">#</a> Online changelog</h3><p>You can find the central Patchman software changelog at the following URL:</p><p><a href="https://download.patchman.co/changelog" target="_blank" rel="noopener noreferrer">https://download.patchman.co/changelog</a></p><p>In addition to the above, the changelog for each software update is also available through your system package manager.</p><h3 id="centos-cloudlinux" tabindex="-1"><a class="header-anchor" href="#centos-cloudlinux" aria-hidden="true">#</a> CentOS / CloudLinux</h3><p>Use the RPM package management utility with the following command:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>rpm -q --changelog patchman-client
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="debian-ubuntu" tabindex="-1"><a class="header-anchor" href="#debian-ubuntu" aria-hidden="true">#</a> Debian / Ubuntu</h3><p>The apt package manager installs the changelog in a fixed location. You can read the changelog in this location with the following command:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>zcat /usr/share/doc/patchman-client/changelog.Debian.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><h2 id="tuning-the-patchman-agent" tabindex="-1"><a class="header-anchor" href="#tuning-the-patchman-agent" aria-hidden="true">#</a> Tuning the Patchman agent</h2><p>The Patchman agent process allows for multiple tuning options. This article serves as a collection of available tuning methods and where to find them.</p><h3 id="scanning-limits" tabindex="-1"><a class="header-anchor" href="#scanning-limits" aria-hidden="true">#</a> Scanning limits</h3><p>Scanning limits allow you to set restrictions on full server scans. Setting an option will apply the scanning limit after a certain event is triggered. Disabling the scanning limit will make sure that the limit will not be applied. Scanning limits can be disabled for manual server scans triggered through the Portal. Scanning limits will only apply to full server scans and therefore will not affect manual end user scans.</p><p>You can configure this on the server group (<a href="https://portal.patchman.co/servers/group/" target="_blank" rel="noopener noreferrer">https://portal.patchman.co/servers/group/</a>)</p><p>The following limits and triggers can be configured:</p><ul><li>Throttle dynamic malware scanning by only scanning changed files</li><li>Disable dynamic malware scanning altogether</li><li>Abort all scanning</li></ul><p>The following triggers can be configured:</p><ul><li>Disabled</li><li>After scanning N users</li><li>After scanning N directories</li><li>After scanning one in N users</li><li>After scanning one in N directories</li><li>After scanning for N hours total (since the beginning of the server-wide scan)</li><li>After surpassing the time of day</li></ul><h3 id="scanning-interval" tabindex="-1"><a class="header-anchor" href="#scanning-interval" aria-hidden="true">#</a> Scanning interval</h3><p>Scanning interval enables you to choose to run Dynamic malware scanning not on every scan, but only on certain intervals, for instance, on certain days of the week.</p><p>You can configure this on the server group (<a href="https://portal.patchman.co/servers/group/" target="_blank" rel="noopener noreferrer">https://portal.patchman.co/servers/group/</a>)</p><p>The following options can be configured:</p><ul><li>During every scan, scan every file dynamically</li><li>During every scan, scan files that have changed since the last dynamic scan</li><li>Only when the scan is in the configurable interval, scan every file dynamically</li><li>Scan every file dynamically when the scan is in the configurable interval, during all other scans only scan changed files dynamically</li><li>Never perform dynamic scanning</li></ul>`,26),b=e("br",null,null,-1),w=r('<h3 id="maximum-file-size" tabindex="-1"><a class="header-anchor" href="#maximum-file-size" aria-hidden="true">#</a> Maximum file size</h3><p>Additionally, scanning limits offer a maximum file size setting, allowing you do determine the cut-off for scanning large files:</p><p><img src="'+l+'" alt=""></p><h3 id="cpu-nice-value-and-i-o-priority" tabindex="-1"><a class="header-anchor" href="#cpu-nice-value-and-i-o-priority" aria-hidden="true">#</a> CPU Nice value and I/O Priority</h3><p>The agent also allows you to configure CPU and IO resource priorities, through nice values for CPU, and Best effort priority for CFQ I/O scheduling</p><p>You can configure this on the server group (<a href="https://portal.patchman.co/servers/group/" target="_blank" rel="noopener noreferrer">https://portal.patchman.co/servers/group/</a>)</p><p><img src="'+h+'" alt=""></p><h3 id="multi-threaded-scanning-configuration" tabindex="-1"><a class="header-anchor" href="#multi-threaded-scanning-configuration" aria-hidden="true">#</a> Multi-threaded scanning configuration</h3><p>With the introduction of multithreading, multithreading settings can be configured for the agent. You can configure this on the server group (<a href="https://portal.patchman.co/servers/group/" target="_blank" rel="noopener noreferrer">https://portal.patchman.co/servers/group/</a>). The following settings can be configured:</p><p><strong>Absolute (thread count)</strong><br> Configure the exact number of threads to use for multithreaded scanning.</p><p><strong>CPU Ratio</strong><br> Allocate a percentage of total available CPU threads to use for multi-threaded scanning. As this is a percentage, it is worth noting that it <strong>rounds down</strong>, to whole threads.</p><p><strong>CPU Reservation</strong><br> Allocate the number of CPU threads for the Patchman daemon to leave unused. Note that there is a <strong>minimum thread allocation of 1</strong>. If a user configures a lower limit, for example 0, or -4 (an 8 thread reservation on a 4 core machine), the Patchman agent logs at <code>info</code> level and instead uses 1 thread.</p><h3 id="what-is-multithreaded-scanning" tabindex="-1"><a class="header-anchor" href="#what-is-multithreaded-scanning" aria-hidden="true">#</a> What is multithreaded scanning?</h3><p>While older versions were entirely single-threaded, version 1.12.0-1 introduces multi-threaded scanning to the Patchman agent.</p><p>Multithreaded scanning enables the Patchman agent process (patchmand) to create multiple worker threads, allowing it to perform multiple tasks concurrently. This allows the agent to better scale performance with the resources available (and allocated) on a hosting platform, and perform far better on tasks that are (mostly) CPU-bound.</p><h3 id="how-does-multithreaded-scanning-benefit-me" tabindex="-1"><a class="header-anchor" href="#how-does-multithreaded-scanning-benefit-me" aria-hidden="true">#</a> How does multithreaded scanning benefit me?</h3>',16),y=r('<h3 id="where-do-i-configure-multithreaded-scanning" tabindex="-1"><a class="header-anchor" href="#where-do-i-configure-multithreaded-scanning" aria-hidden="true">#</a> Where do I configure multithreaded scanning?</h3><p>You can configure the agent&#39;s multithreaded scanning settings on the server group (once logged in; <a href="https://portal.patchman.co/servers/group/" target="_blank" rel="noopener noreferrer">https://portal.patchman.co/servers/group/</a>) which allows you to easily manage it across multiple servers.</p><h3 id="what-can-i-configure-and-what-do-the-settings-mean" tabindex="-1"><a class="header-anchor" href="#what-can-i-configure-and-what-do-the-settings-mean" aria-hidden="true">#</a> What can I configure, and what do the settings mean?</h3><p>With the introduction of multithreading, the following settings can be configured for the agent:</p><h4 id="absolute-thread-count" tabindex="-1"><a class="header-anchor" href="#absolute-thread-count" aria-hidden="true">#</a> Absolute (thread count)</h4><p>Configure the exact number of threads to use for multithreaded scanning.</p><h4 id="cpu-ratio" tabindex="-1"><a class="header-anchor" href="#cpu-ratio" aria-hidden="true">#</a> CPU Ratio</h4><p>Allocate a percentage of total available CPU threads to use for multi-threaded scanning. As this is a percentage, it is worth noting that it <strong>rounds down</strong>, to whole threads.</p><h4 id="cpu-reservation" tabindex="-1"><a class="header-anchor" href="#cpu-reservation" aria-hidden="true">#</a> CPU Reservation</h4><p>Allocate the number of CPU threads for the Patchman daemon to leave unused. Note that there is a <strong>minimum thread allocation of 1</strong>. If a user configures a lower limit, for example 0, or -4 (an 8 thread reservation on a 4 core machine), the Patchman agent logs at <code>info</code> level and instead uses 1 thread.</p><h3 id="defaults-upon-release-and-after" tabindex="-1"><a class="header-anchor" href="#defaults-upon-release-and-after" aria-hidden="true">#</a> Defaults, upon release and after</h3><p>Upon release of the multithreading feature, the &#39;Absolute&#39; setting will be used as the default for all existing customers&#39; server groups, and set to 1 core, meaning that for existing users, agent behaviour is unchanged until they explicitly increase the thread count. For <em>new</em> server groups created after the feature is live, a sensible default is chosen that does allow users to benefit from multithreading out of the box; CPU Ratio, set to 50%.</p><hr><h2 id="how-do-automatic-agent-updates-work" tabindex="-1"><a class="header-anchor" href="#how-do-automatic-agent-updates-work" aria-hidden="true">#</a> How do automatic agent updates work?</h2>',14),x={class:"tip custom-block"},_=e("p",{class:"custom-block-title"},null,-1),k=r('<p>The Patchman agent is capable of performing unattended automated updates. This saves you time and effort whenever we release a new version, and ensures that all your servers are always running the latest version with both the newest features and the latest bugfixes.</p><h3 id="configuring-automatic-updates" tabindex="-1"><a class="header-anchor" href="#configuring-automatic-updates" aria-hidden="true">#</a> Configuring automatic updates</h3><h4 id="disabling-automatic-updates" tabindex="-1"><a class="header-anchor" href="#disabling-automatic-updates" aria-hidden="true">#</a> Disabling automatic updates</h4><p>Automatic updates are switched on by default, and are available for agents with version 1.7.0-1 and higher.</p><p>If you do not wish to benefit from automatic updates, you can opt out through an option in the Portal. The option for controlling the automatic updates can be configured per server group. To disable automatic updates for a server group, navigate to &quot;Server &gt; Server groups&quot;, and then select the relevant server group in the list. Scroll down to &quot;Miscellaneous settings&quot; and deselect &quot;Automatic updates&quot;.</p><p><img src="'+p+`" alt=""></p><h4 id="repository-name-modifications" tabindex="-1"><a class="header-anchor" href="#repository-name-modifications" aria-hidden="true">#</a> Repository name modifications</h4><p>By default we assume the repository is named &quot;patchman&quot;, as will be the case if you use our installation script to install the repository on your system. If you decided to rename the repository definition, you can configure the alternative repository name by adding the following data to the file /etc/patchman/patchman.ini (create it if it does not yet exist):</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[updates]
repository = patchman
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Naturally, replace &quot;patchman&quot; with the appropriate value. Make sure to reload the daemon after modifying the file:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>service patchman reload
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Our update process will use the new repository name where appropriate.</p><h3 id="under-the-hood-steps-in-automatic-updating" tabindex="-1"><a class="header-anchor" href="#under-the-hood-steps-in-automatic-updating" aria-hidden="true">#</a> Under the hood: steps in automatic updating</h3><p>As a system administrator you may want to know how the updates are performed. In particular, you may be interested to know what checks we perform to ensure successful updates, what rollback procedures are involved if an update fails, and how the validity of each update is verified. This section lists all the steps the agent takes including some background information regarding the how and why for each step.</p><p>When building the updating procedure, our goal was to simulate the steps and checks involved in any manual update, and you&#39;ll notice that we&#39;re closely following the steps you might take if you manually performed an update of our software on your system. In particular, we made sure that we relied on the system package managers as much as possible (since that is what these systems were built for) which means we can delegate package signature validation and repository downloading to those proven tools. Additionally, we picked the steps involved in such a way that it will never update anything other than the patchman-client and patchman-client-realtime package, even if an update dependency requires it. If we ever update our dependencies, we will require a manual (attended) upgrade from you. All of this is done to ensure we don&#39;t modify anything on your systems that is not strictly required for purely updating our own software.</p><div class="tip custom-block"><p class="custom-block-title"></p><p>In the steps below, wherever actions are performed for the patchman-client package, they are repeated for the patchman-client-realtime package if (and only if) you have that installed.</p></div><h4 id="centos-cloudlinux-1" tabindex="-1"><a class="header-anchor" href="#centos-cloudlinux-1" aria-hidden="true">#</a> CentOS/CloudLinux</h4><ol><li>Clean the cached metadata for the patchman repository to ensure issuing an install command will result in new metadata being downloaded from our repository <ol><li>On CentOS 6 and 7:<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>yum clean all --disablerepo=&quot;*&quot; --enablerepo=&quot;patchman&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>On CentOS 8:<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>dnf clean all --disablerepo=&quot;*&quot; --enablerepo=&quot;patchman&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol></li><li>Download the most recent version of the patchman-client package into the cache directory (and parse the associated filename). If no new version is available, stop the update procedure. <ol><li>On CentOS 6 and 7:<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>yum install -y --downloadonly --downloaddir=&lt;patchman tmp dir&gt; patchman-client
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>On CentOS 8<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>dnf install -y --downloadonly --downloaddir=&lt;patchman tmp dir&gt; --verbose patchman-client
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol></li><li>Determine the filename of the downloaded package using the filename from step 2.</li><li>Install the downloaded package using rpm. Since rpm is not able to download any potentially missing dependencies, this step will automatically fail if any unforeseen dependency problems arise.<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>rpm -U /&lt;patchman tmp dir&gt;/patchman-client-1.2.3-1.rpm
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>Parse the output from the rpm command to check whether the update succeeded.</li><li>If the update is successful, the agent will restart itself after completion of the update procedure, ensuring the server is running the newly installed version afterwards.</li></ol><h4 id="debian-ubuntu-1" tabindex="-1"><a class="header-anchor" href="#debian-ubuntu-1" aria-hidden="true">#</a> Debian/Ubuntu</h4><ol><li>Read the filename that contains our repository definition and the path to the cache directory. This means parsing Dir, Dir::Etc, Dir::Etc::sourceparts, Dir::Cache and Dir::Cache::archives from:<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>apt-config dump
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>Update the cached metadata for only the patchman repository. This is done by telling apt to perform the update while thinking our repository is the only repository definition.<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>apt-get update -o Dir::Etc::sourcelist=&quot;/etc/apt/sources.list.d/patchman.repo&quot; -o Dir::Etc::sourceparts=&quot;-&quot; -o APT::Get::List-Cleanup=&quot;0&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>Check whether a new update for patchman-client is available by parsing the output from:<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>apt-cache policy patchman-client
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>If a new update is available, download it (and parse the associated filename).<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>apt-get -d install patchman-client
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>Determine the filename of the downloaded package using the cache directory and the filename from step 4.</li><li>Install the downloaded package using dpkg. Since dpkg is not able to download any potentially missing dependencies, this step will automatically fail if any unforeseen dependency problems arise.<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>dpkg -i /var/cache/apt/archives/patchman-client_1.2.3-1.deb
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>Parse the output from the dpkg command to check whether the update succeeded.</li><li>If the update is successful, the agent will restart itself after completion of the update procedure, ensuring the server is running the newly installed version afterwards.</li></ol><div class="tip custom-block"><p class="custom-block-title"></p><p>In step 3, we used <code>apt-cache madison patchman-client</code> until version 1.14.0-1.</p></div><hr><h2 id="updating-the-patchman-agent" tabindex="-1"><a class="header-anchor" href="#updating-the-patchman-agent" aria-hidden="true">#</a> Updating the Patchman agent</h2><div class="tip custom-block"><p class="custom-block-title"></p><p>We strongly suggest using the auto-update feature, as described in <a href="https://patchman.atlassian.net/wiki/spaces/PT/pages/113410280" target="_blank" rel="noopener noreferrer">this article</a>. Relying on auto-update decreases maintenance and ensures you will always automatically use the most up-to-date version of the Patchman software.</p></div><p>The Patchman agent, running on the servers you add to the Portal, is updated regularly to resolve bugs and introduce new features. Updating the Patchman agent only requires you to update the package using your package manager.</p><p>We recommend adding the updating of the Patchman agent to your regular update schedule. However, if you need to manually update the agent, you can use the following commands:</p><p>If you are using CentOS, you can use:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>yum update patchman-client
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>or</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>dnf update patchman-client
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>If you are using Debian or Ubuntu, you can use:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>apt-get update
apt-get install patchman-client
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>After updating the agent, the service should restart automatically and you should see the new version number appear in the Portal (under Servers).</p><p>On rare occasions customers reported that the agent refuses to stop, in that case a manual restart is required.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>service patchman restart
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>If the restart fails, there is probably a long-running task that prevents the agent from restarting immediately. The logfiles in /var/log/patchman/ will point out that the shutdown signal was received by the process, and will be processed as soon as possible. If the process hasn&#39;t restarted after 10 minutes, please contact <a href="mailto:support@patchman.co">support@patchman.co</a> and send along the logfiles for further inspection.</p><p>Although we strive to maximize compatibility, we may occassionally drop support for outdated agent versions. Your agent will then not be able to connect to the Portal, meaning that new detections will not be reported and existing detections can&#39;t be resolved.</p><hr><h2 id="uninstalling-the-patchman-agent" tabindex="-1"><a class="header-anchor" href="#uninstalling-the-patchman-agent" aria-hidden="true">#</a> Uninstalling the Patchman agent</h2><p>Patchman is installed on your system using the standard package manager. This means that you can easily uninstall the software using this package manager.</p><h3 id="centos-cloudlinux-2" tabindex="-1"><a class="header-anchor" href="#centos-cloudlinux-2" aria-hidden="true">#</a> CentOS / CloudLinux</h3><p>Use the yum package management utility with the following command:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>yum remove patchman-client
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>or</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>dnf remove patchman-client
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="debian-ubuntu-2" tabindex="-1"><a class="header-anchor" href="#debian-ubuntu-2" aria-hidden="true">#</a> Debian / Ubuntu</h3><p>Use the apt package management utility with the following command:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>apt-get remove patchman-client
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="cancelling-the-server-license" tabindex="-1"><a class="header-anchor" href="#cancelling-the-server-license" aria-hidden="true">#</a> Cancelling the server license</h3><p>Make sure to cancel the server license in the Patchman Portal. We strongly suggest you do this <strong><em>after</em></strong> the removal of the software from your system, because if the software is still running it may automatically request a new license on your account (according to the standard installation procedure).</p><p>In the Patchman Portal, go to the server configuration page under Servers. If your plan requires advance notice for cancelling servers, click the red Cancel button to cancel your license and deactivate it per the renewal date. Otherwise, click the red Delete button to immediately remove the server license from your account. This will make sure you are no longer billed for this server.</p>`,51);function P(C,q){const i=s("router-link"),o=s("RouterLink");return c(),u("div",null,[m,e("nav",f,[e("ul",null,[e("li",null,[t(i,{to:"#where-can-i-find-the-software-changelog"},{default:n(()=>[a("Where can I find the software changelog?")]),_:1}),e("ul",null,[e("li",null,[t(i,{to:"#online-changelog"},{default:n(()=>[a("Online changelog")]),_:1})]),e("li",null,[t(i,{to:"#centos-cloudlinux"},{default:n(()=>[a("CentOS / CloudLinux")]),_:1})]),e("li",null,[t(i,{to:"#debian-ubuntu"},{default:n(()=>[a("Debian / Ubuntu")]),_:1})])])]),e("li",null,[t(i,{to:"#tuning-the-patchman-agent"},{default:n(()=>[a("Tuning the Patchman agent")]),_:1}),e("ul",null,[e("li",null,[t(i,{to:"#scanning-limits"},{default:n(()=>[a("Scanning limits")]),_:1})]),e("li",null,[t(i,{to:"#scanning-interval"},{default:n(()=>[a("Scanning interval")]),_:1})]),e("li",null,[t(i,{to:"#maximum-file-size"},{default:n(()=>[a("Maximum file size")]),_:1})]),e("li",null,[t(i,{to:"#cpu-nice-value-and-i-o-priority"},{default:n(()=>[a("CPU Nice value and I/O Priority")]),_:1})]),e("li",null,[t(i,{to:"#multi-threaded-scanning-configuration"},{default:n(()=>[a("Multi-threaded scanning configuration")]),_:1})]),e("li",null,[t(i,{to:"#what-is-multithreaded-scanning"},{default:n(()=>[a("What is multithreaded scanning?")]),_:1})]),e("li",null,[t(i,{to:"#how-does-multithreaded-scanning-benefit-me"},{default:n(()=>[a("How does multithreaded scanning benefit me?")]),_:1})]),e("li",null,[t(i,{to:"#where-do-i-configure-multithreaded-scanning"},{default:n(()=>[a("Where do I configure multithreaded scanning?")]),_:1})]),e("li",null,[t(i,{to:"#what-can-i-configure-and-what-do-the-settings-mean"},{default:n(()=>[a("What can I configure, and what do the settings mean?")]),_:1})]),e("li",null,[t(i,{to:"#defaults-upon-release-and-after"},{default:n(()=>[a("Defaults, upon release and after")]),_:1})])])]),e("li",null,[t(i,{to:"#how-do-automatic-agent-updates-work"},{default:n(()=>[a("How do automatic agent updates work?")]),_:1}),e("ul",null,[e("li",null,[t(i,{to:"#configuring-automatic-updates"},{default:n(()=>[a("Configuring automatic updates")]),_:1})]),e("li",null,[t(i,{to:"#under-the-hood-steps-in-automatic-updating"},{default:n(()=>[a("Under the hood: steps in automatic updating")]),_:1})])])]),e("li",null,[t(i,{to:"#updating-the-patchman-agent"},{default:n(()=>[a("Updating the Patchman agent")]),_:1})]),e("li",null,[t(i,{to:"#uninstalling-the-patchman-agent"},{default:n(()=>[a("Uninstalling the Patchman agent")]),_:1}),e("ul",null,[e("li",null,[t(i,{to:"#centos-cloudlinux-2"},{default:n(()=>[a("CentOS / CloudLinux")]),_:1})]),e("li",null,[t(i,{to:"#debian-ubuntu-2"},{default:n(()=>[a("Debian / Ubuntu")]),_:1})]),e("li",null,[t(i,{to:"#cancelling-the-server-license"},{default:n(()=>[a("Cancelling the server license")]),_:1})])])])])]),v,e("p",null,[a("Further reading:"),b,a(" More information about configuring scanning limits and interval can be found in the main Patchman CLEAN article, here: "),t(o,{to:"/patchman/frequently_asked_questions/#what-is-patchman-clean-and-how-do-i-enable-configure-it"},{default:n(()=>[a("What is Patchman CLEAN, and how do I enable & configure it?")]),_:1})]),w,e("p",null,[a("While multithreading does affect most tasks performed by the agent, the most drastic benefit is seen with the use of "),t(o,{to:"/patchman/frequently_asked_questions/#what-is-patchman-clean-and-how-do-i-enable-configure-it"},{default:n(()=>[a("Patchman CLEAN")]),_:1}),a("'s rule-scanning mechanism. Where before customers who used Patchman CLEAN could see longer scanning times depending on the size and density of their platform (and would likely have configured scanning limits to mitigate them), the introduction of multithreading—if employed and configured properly—will drastically improve scan times, allowing users to be far less restrictive in scanning configuration. This, in turn, greatly benefits the effective coverage of the CLEAN solution.")]),y,e("div",x,[_,e("p",null,[a("If you have installed the package for "),t(o,{to:"/patchman/frequently_asked_questions/#real-time-scanning-what-is-it-and-how-do-i-configure-it"},{default:n(()=>[a("real-time scanning")]),_:1}),a(", automatic updates will also apply to that package. If you don’t have it installed yet, you need to manually install it first - Patchman can’t automatically perform this installation for you, for security reasons.")])]),k])}const A=d(g,[["render",P],["__file","index.html.vue"]]);export{A as default};
